"use client"
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from "@/context/authContext";
import { CartProvider } from "@/context/cartContext";
import { NotificationProvider } from '../context/notificationContext';
import { Toaster } from "sonner";
import { GoogleOAuthProvider } from "@react-oauth/google";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

  // Environment configuration for notifications
const NotificationConfig = {
  apiUrl: 'http://localhost:5000/api',
  wsUrl: process.env.NEXT_PUBLIC_WS_URL || 'ws://localhost:5000',
  enableWebSocket: process.env.NEXT_PUBLIC_ENABLE_WS !== 'false',
  pollInterval: parseInt(process.env.NEXT_PUBLIC_NOTIFICATION_POLL_INTERVAL || '30000'),
  maxReconnectAttempts: parseInt(process.env.NEXT_PUBLIC_WS_MAX_RECONNECT || '5')
};

const metadata = {
  title: "Demo Store | Bajgo",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {



  return (
    <html lang="en">
        <head>
    <title>臻萃咖啡：採用意譯，強調咖啡的精粹品質，更具品牌美感。</title>
    <meta name="description" content="Generated by create next app" />
  </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
         <GoogleOAuthProvider clientId={process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID}>
      <AuthProvider>
        <NotificationProvider config={NotificationConfig}>
        <CartProvider>
          {children}
            <Toaster position="top-right" richColors /> {/* 👈 Top-right Sonner */}
          </CartProvider>
          </NotificationProvider>
        </AuthProvider>
        </GoogleOAuthProvider>
      </body>
    </html>
  );
}
